{%- set users = pillar.get('users', {}) -%}
{%- set groups = pillar.get('groups', {}) -%}
# /etc/security/limits.conf
#
# This file is managed by salt
#
#This file sets the resource limits for the users logged in via PAM.
#It does not affect resource limits of the system services.
#
#Also note that configuration files in /etc/security/limits.d directory,
#which are read in alphabetical order, override the settings in this
#file in case the domain is the same or more specific.
#That means for example that setting a limit for wildcard domain here
#can be overriden with a wildcard setting in a config file in the
#subdirectory, but a user specific setting here can be overriden only
#with a user specific setting in the subdirectory.
#
#Each line describes a limit for a user in the form:
#
#<domain>        <type>  <item>  <value>
#
#Where:
#<domain> can be:
#        - a user name
#        - a group name, with @group syntax
#        - the wildcard *, for default entry
#        - the wildcard %, can be also used with %group syntax,
#                 for maxlogin limit
#
#<type> can have the two values:
#        - "soft" for enforcing the soft limits
#        - "hard" for enforcing hard limits
#
#<item> can be one of the following:
#        - core - limits the core file size (KB)
#        - data - max data size (KB)
#        - fsize - maximum filesize (KB)
#        - memlock - max locked-in-memory address space (KB)
#        - nofile - max number of open files
#        - rss - max resident set size (KB)
#        - stack - max stack size (KB)
#        - cpu - max CPU time (MIN)
#        - nproc - max number of processes
#        - as - address space limit (KB)
#        - maxlogins - max number of logins for this user
#        - maxsyslogins - max number of logins on the system
#        - priority - the priority to run user process with
#        - locks - max number of file locks the user can hold
#        - sigpending - max number of pending signals
#        - msgqueue - max memory used by POSIX message queues (bytes)
#        - nice - max nice priority allowed to raise to values: [-20, 19]
#        - rtprio - max realtime priority
#
#<domain>      <type>  <item>         <value>
#
#*               soft    core            0
#*               hard    rss             10000
#@student        hard    nproc           20
#@faculty        soft    nproc           20
#@faculty        hard    nproc           50
#ftp             hard    nproc           0
#@student        -       maxlogins       4

# User limit specification
{%- for user,specs in users.items() %}
  {% if 'limits' in specs %}
   {% for limit in specs.get('limits', []) %}
   {%- if limit.get('limit_type') and limit.get('limit_item') and limit.get('limit_value') %}
{{ user }}    {{ limit.get('limit_type') }}    {{ limit.get('limit_item') }}    {{ limit.get('limit_value') }}
  {%- endif %}
  {%- endfor %}
  {% endif %}
{%- endfor %}

# Group limit specification
{%- for group,specs in groups.items() %}
  {%- for spec in specs %}
  {%- if spec.get('limit_type') and spec.get('limit_item') and spec.get('limit_value') %}
@{{ group }}    {{ spec.get('limit_type') }}    {{ spec.get('limit_item') }}         {{ spec.get('limit_value') }}
  {%- endif %}
  {%- endfor %}
{%- endfor %}

# End of file
